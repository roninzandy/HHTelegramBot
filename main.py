"""
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –æ –Ω–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏—è—Ö —Å —Å–∞–π—Ç–∞ hh.kz –∏ —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å –ø–æ–º–æ—â—å—é telegram-–±–æ—Ç–∞.

–î–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º. –ü—Ä–æ–µ–∫—Ç —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –º–æ–¥—É–ª–µ–π:
1. main.py - —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
2. config.py - —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ telegram-–±–æ—Ç–µ.
3. parsing.py - —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü.
4. db.py - —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î.

–ü—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
1. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü –≤ –≤–∏–¥–µ html-—Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫—É selenium_data.
2. –ü–∞—Ä—Å–∏–Ω–≥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏—è—Ö –ø–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É.
3. –ü–æ–∏—Å–∫ –Ω–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π –ø—É—Ç–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–π, –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–∞—Ä—Å–∏–Ω–≥–∞, –∏ –≤–∞–∫–∞–Ω—Å–∏–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ
–ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –ë–î.
4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –ë–î –¥–∞–Ω–Ω—ã—Ö –æ –Ω–æ–≤—ã—Ö –≤–∞–∫–∞–Ω—Å–∏—è—Ö.
5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –Ω–æ–≤—ã–º–∏ –≤–∞–∫–∞–Ω—Å–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –ø–æ–º–æ—â—å—é telegram-–±–æ—Ç–∞.

–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å.

–î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ telegram-–±–æ—Ç–∞ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ telegram –ø–æ –∏–º–µ–Ω–∏ @beastchargerbot (https://t.me/beastchargerbot).
"""
import os
import threading
import time
import telebot

import config

from parsing import run_parsing

bot = telebot.TeleBot(config.TOKEN)

subscribed_users = {}


@bot.message_handler(commands=['start'])
def welcome(message):
    chat_id = message.chat.id
    sti = open('static/sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sti)
    bot.send_message(message.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!, \n–Ø - <b>{1.first_name}</b>, '
                                      '–∏ —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –í–∞–º –Ω–æ–≤—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏'
                                      ' —Å hh.kz!'.format(message.from_user, bot.get_me()), parse_mode='html')
    if chat_id not in subscribed_users:
        subscribed_users[chat_id] = True


def send_hh_message():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    """
    while True:
        try:
            time.sleep(5)
            data_from_parser = run_parsing()
            if data_from_parser:
                for chat_id in subscribed_users:
                    for i in data_from_parser:
                        result = ''
                        for key, value in i.items():
                            if key == 'Title':
                                result += f'üíº <b><a href="{i["Link"]}">{value}</a></b>\n'
                            elif key == 'Salary':
                                result += f'üí∞ <b>{value}</b>\n'
                            elif key == 'Company':
                                result += f'üèôÔ∏è <b>{value}</b>\n'
                            elif key == 'Image':
                                img_path = f'static/{i[key]}'
                                if os.path.exists(img_path):
                                    with open(img_path, 'rb') as resized_image_file:
                                        bot.send_photo(chat_id, photo=resized_image_file, caption=result, parse_mode='html') #disable_web_page_preview=True)
                                else:
                                    default_img_path = f'static/hh.png'
                                    if os.path.exists(default_img_path):
                                        with open(default_img_path, 'rb') as resized_image_file:
                                            bot.send_photo(chat_id, photo=resized_image_file, caption=result, parse_mode='html')
                                    else:
                                        bot.send_photo(chat_id, photo=None, caption=result,
                                                       parse_mode='html')


            print(f'–ü–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É: {subscribed_users}')

            time.sleep(1800)  # –¢–∞–π–º–µ—Ä –º–µ–∂–¥—É —Ä–∞—Å—Å—ã–ª–∫–∞–º–∏: 30 –º–∏–Ω—É—Ç.

        except Exception as e:
            print(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞—Å—Å—ã–ª–∫–µ: {e}')


def main():
    t = threading.Thread(target=send_hh_message)
    t.daemon = True
    t.start()
    bot.polling(none_stop=True)


if __name__ == '__main__':
    main()

